/*
 * File: app/view/Shortcut.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TaskManager.view.Shortcut', {
    extend: 'Ext.container.Container',
    alias: 'widget.shortcut',

    requires: [
        'TaskManager.view.ShortcutViewModel',
        'Ext.Img',
        'Ext.form.Label'
    ],

    config: {
        categoryId: null,
        categoryName: null,
        src: null,
        displayType: null
    },

    viewModel: {
        type: 'shortcut'
    },
    height: 128,
    width: 128,
    layout: 'absolute',
    defaultListenerScope: true,

    bind: {
        categoryId: '{ca_id}',
        categoryName: '{ca_name}',
        src: '{piSrc}',
        displayType: '{displayType}'
    },
    items: [
        {
            xtype: 'image',
            height: 128,
            itemId: 'shortcutImage',
            style: {
                cursor: 'pointer'
            },
            width: 128,
            bind: {
                src: '{piSrc}'
            },
            listeners: {
                render: 'onImageRender'
            }
        },
        {
            xtype: 'image',
            x: 100,
            y: 100,
            height: 24,
            hidden: true,
            itemId: 'editShortcut',
            style: {
                cursor: 'pointer'
            },
            width: 24,
            src: 'resources/images/ico_edit_shotcut.png',
            listeners: {
                render: 'onEditorRender'
            }
        },
        {
            xtype: 'image',
            x: 73,
            y: 100,
            height: 24,
            hidden: true,
            itemId: 'delShortcut',
            style: {
                cursor: 'pointer'
            },
            width: 24,
            src: 'resources/images/ico_x.png',
            listeners: {
                render: 'onDeleteRender'
            }
        },
        {
            xtype: 'image',
            x: 109,
            y: 3,
            height: 16,
            hidden: true,
            itemId: 'editShortcutTitle',
            style: {
                cursor: 'pointer'
            },
            width: 16,
            src: 'resources/images/ico_edit_shortcut_s.png',
            listeners: {
                render: 'onTitleEditorRender'
            }
        },
        {
            xtype: 'label',
            itemId: 'shortcutTitle',
            style: {
                color: 'white',
                'font-size': '12px; margin:3px 0 0 3px'
            },
            width: 110,
            bind: {
                text: '{ca_name}'
            }
        }
    ],

    onImageRender: function(component, eOpts) {
        component.getEl().on('click', function(){
            var shortcut = component.up('shortcut');
            shortcut.fireEvent('click', shortcut.categoryId, shortcut.categoryName, shortcut.displayTyype, component);
        });
    },

    onEditorRender: function(component, eOpts) {
        component.getEl().on('click', function(){
            var shortcut = component.up('shortcut');
            shortcut.fireEvent('editShortcut', shortcut);
        });
    },

    onDeleteRender: function(component, eOpts) {
        component.getEl().on('click', function(){
            var shortcut = component.up('shortcut');
            shortcut.fireEvent('deleteShortcut', shortcut);
        });
    },

    onTitleEditorRender: function(component, eOpts) {
        component.getEl().on('click', function(){
            var shortcut = component.up('shortcut');
            shortcut.fireEvent('editTitle', shortcut.down('#shortcutTitle'));
        });
    },

    showEditButton: function() {
        this.down('#editShortcut').setHidden(false);
        this.down('#editShortcutTitle').setHidden(false);
        this.down('#delShortcut').setHidden(false);
    },

    changeSize: function(size) {
        this.setWidth(size);
        this.setHeight(size);
        this.down('#shortcutImage').setWidth(size);
        this.down('#shortcutImage').setHeight(size);
    },

    getTitle: function() {
        var title = this.getViewModel().get('ca_name');
        return title;
    }

});