/*
 * File: app/view/MultiFileInput.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TaskManager.view.MultiFileInput', {
    extend: 'Ext.form.field.Text',
    alias: 'widget.multifileinput',

    requires: [
        'TaskManager.view.MultiFileInputViewModel'
    ],

    viewModel: {
        type: 'multifileinput'
    },
    width: '100%',
    inputType: 'file',
    defaultListenerScope: true,

    listeners: {
        render: 'onTextfieldRender',
        change: 'onTextfieldChange'
    },

    onTextfieldRender: function(component, eOpts) {
        var el = Ext.get(component.id+'-inputEl');
        el.set({
            size: component.inputSize || 1
        });
        if(component.multiple) {
            el.set({
                multiple: 'multiple'
            });
        }
    },

    onTextfieldChange: function(field, newValue, oldValue, eOpts) {
        var el = Ext.get(field.id+'-inputEl');
        var files = el.dom.files;
        field.fireEvent('select', field, files);
    }

});