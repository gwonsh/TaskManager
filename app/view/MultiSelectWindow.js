/*
 * File: app/view/MultiSelectWindow.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TaskManager.view.MultiSelectWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.multiselectwindow',

    requires: [
        'TaskManager.view.MultiSelectWindowViewModel',
        'Ext.form.field.ComboBox',
        'Ext.container.Container',
        'Ext.button.Button',
        'Ext.form.field.TextArea'
    ],

    viewModel: {
        type: 'multiselectwindow'
    },
    height: 270,
    width: 400,
    title: 'My Window',
    ghost: false,
    defaultListenerScope: true,

    layout: {
        type: 'vbox',
        padding: 40
    },
    items: [
        {
            xtype: 'combobox',
            itemId: 'firstOption',
            width: '100%',
            labelWidth: 70,
            displayField: 'name',
            queryMode: 'local',
            valueField: 'name',
            bind: {
                fieldLabel: '{option1}'
            },
            listeners: {
                select: 'onFirstOptionSelect'
            }
        },
        {
            xtype: 'combobox',
            disabled: true,
            itemId: 'secondOption',
            width: '100%',
            labelWidth: 70,
            displayField: 'name',
            valueField: 'name',
            bind: {
                fieldLabel: '{option2}'
            }
        },
        {
            xtype: 'container',
            width: '100%',
            layout: {
                type: 'hbox',
                pack: 'center'
            },
            items: [
                {
                    xtype: 'container',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'btnAdd',
                            style: 'background-color:#eeeeee;border:1px solid #cecece',
                            ui: 'plain-toolbar-small',
                            width: 70,
                            text: 'ADD',
                            listeners: {
                                click: 'onBtnAddClick'
                            }
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnClear',
                            style: 'background-color:#eeeeee;border:1px solid #cecece',
                            ui: 'plain-toolbar-small',
                            width: 70,
                            text: 'CLEAR',
                            listeners: {
                                click: 'onBtnClearClick'
                            }
                        }
                    ]
                },
                {
                    xtype: 'textareafield',
                    flex: 1,
                    itemId: 'valueField',
                    hideEmptyLabel: false,
                    labelWidth: 0,
                    readOnly: true
                }
            ]
        },
        {
            xtype: 'container',
            margins: '',
            margin: '16 0 0 0',
            width: '100%',
            layout: {
                type: 'hbox',
                align: 'middle',
                pack: 'center'
            },
            items: [
                {
                    xtype: 'button',
                    itemId: 'btnOk',
                    width: 80,
                    bind: {
                        text: '{entry}'
                    },
                    listeners: {
                        click: 'onBtnOkClick'
                    }
                },
                {
                    xtype: 'button',
                    itemId: 'btnCancel',
                    margin: '0 0 0 10',
                    width: 80,
                    bind: {
                        text: '{cancel}'
                    },
                    listeners: {
                        click: 'onBtnCancelClick'
                    }
                }
            ]
        }
    ],

    onFirstOptionSelect: function(combo, record, eOpts) {
        var sbDt = record.data.subData;
        var sndOpt = this.down('#secondOption');
        sndOpt.setDisabled(false);
        sndOpt.value = '';
        var sData = [];
        Ext.Array.each(sbDt, function(item){
            sData.push({name:item});
        });
        var store = Ext.create('Ext.data.Store', {
            fields:['name'],
            data:sData
        });
        sndOpt.setStore(store);
    },

    onBtnAddClick: function(button, e, eOpts) {
        var fstOpt = button.up('window').down('#firstOption');
        var sndOpt = button.up('window').down('#secondOption');
        var valFld = button.up('window').down('#valueField');
        var preVal = (valFld.getValue() === '')? '' : valFld.getValue() + ',';
        var value = '';
        if(fstOpt.getValue() === '' || fstOpt.getValue() === null || fstOpt.getValue() === undefined){
            alert(locale.upload.selectFirstOption);
            return;
        }
        else if(sndOpt.getValue() === '' || sndOpt.getValue() === null || sndOpt.getValue() === undefined){
            var cfm = confirm(locale.upload.selectSecondOption);
            if(cfm){
                value = preVal + sndOpt.getValue() + fstOpt.getValue() + '-[' + sndOpt.getValue() + ']';
            }
            else{
                return;
            }
        }
        else{
            value = preVal + fstOpt.getValue() + '-[' + sndOpt.getValue() + ']';
        }
        valFld.setValue(value);
        fstOpt.setValue('');
        sndOpt.setValue('');
        sndOpt.disable();
    },

    onBtnClearClick: function(button, e, eOpts) {

        var valFld = button.up('window').down('#valueField');

        valFld.setValue('');
    },

    onBtnOkClick: function(button, e, eOpts) {
        var w = button.up('window');
        w.setTitle('');
        w.close();
    },

    onBtnCancelClick: function(button, e, eOpts) {
        var w = button.up('window');
        w.destroy();
    },

    setFirstStore: function(store) {
        var fstOpt = this.down('#firstOption');
        fstOpt.setStore(store);
    }

});