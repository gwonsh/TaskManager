{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Main"
    },
    "name": "MyController",
    "designerId": "0b84b410-4a8d-494f-9f16-7f586f41b41f",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "loginWindow",
                "selector": "#loginWin"
            },
            "name": "loginWindow",
            "designerId": "64656d23-3138-463e-a565-56a06a306c03"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainView",
                "selector": "#mainView"
            },
            "name": "mainView",
            "designerId": "a374c841-5f34-4161-8bff-db987cc65aff"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "viewPan",
                "selector": "#viewPan"
            },
            "name": "viewPan",
            "designerId": "280dc7cf-3449-4013-9a6c-d31dc03efcce"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "eastPanel",
                "selector": "#eastPanel"
            },
            "name": "eastPanel",
            "designerId": "32509b5d-8d52-45fb-b587-366898211d07"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "dataList",
                "selector": "#dataList"
            },
            "name": "dataList",
            "designerId": "482e6695-d2a1-431a-8b69-8771072f18cc"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "westPanel",
                "selector": "#westPanel"
            },
            "name": "westPanel",
            "designerId": "f85c9e90-d9a2-47d6-8415-3b8d5833918f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "shortcuts"
                ],
                "fn": "setShortcuts",
                "implHandler": [
                    "var shortcutCon = this.getMainView().down('#headerPan').down('#shortcutCon');",
                    "var i;",
                    "var len = shortcuts.length;",
                    "for(i=len-1; i>=0; i--){",
                    "    if(!shortcuts[i].isDefault){",
                    "        Ext.create('Ext.tip.ToolTip', {",
                    "            target: shortcuts[i].getEl(),",
                    "            html: shortcuts[i].down('#shortcutTitle').text",
                    "        });",
                    "        shortcuts[i].changeSize(30);",
                    "        shortcuts[i].down('#shortcutTitle').hide();",
                    "        shortcutCon.insert(0, shortcuts[i]);",
                    "    }",
                    "}",
                    "// Ext.Array.each(shortcuts, function(entry, index){",
                    "//     console.log(shortcuts.length);",
                    "//     if(index < shortcuts.length - 1){",
                    "//         entry.changeSize(45);",
                    "//         shortcutCon.add(entry);",
                    "//     }",
                    "// });"
                ]
            },
            "name": "setShortcuts",
            "designerId": "3f4a70dd-3792-4ce8-93b1-2f0c916dcdd9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "bytes"
                ],
                "fn": "bytesToSize",
                "implHandler": [
                    "    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];",
                    "    if (bytes === 0) return 'n/a';",
                    "    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));",
                    "    if (i === 0) return bytes + ' ' + sizes[i]; ",
                    "    return (bytes / Math.pow(1024, i)).toFixed(1) + ' ' + sizes[i];"
                ]
            },
            "name": "bytesToSize",
            "designerId": "87a4c462-e4d0-4098-9ff8-3bf6ce720654"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "cols"
                ],
                "fn": "getDataFields",
                "implHandler": [
                    "var fields = [];",
                    "//////* generating basic fields *//////",
                    "",
                    "/* title field */",
                    "fields.push({name:'bd_subject'});",
                    "/* common information of file */",
                    "fields.push({name: 'bd_file'});",
                    "/* registered data */",
                    "fields.push({name: 'bd_regdate'});",
                    "/* user name */",
                    "fields.push({name: 'bd_name'});",
                    "/* data index */",
                    "fields.push({name: 'bd_idx'});",
                    "/* user id */",
                    "fields.push({name: 'mb_id'});",
                    "/* colortag */",
                    "fields.push({name: 'bd_colortag'});",
                    "/* information of used fields */",
                    "fields.push({name: 'bd_data'});",
                    "",
                    "/* description field */",
                    "fields.push({",
                    "    convert:function(v, rec){",
                    "        v = v.replace(/\\n/g, '<br>');",
                    "        return v;",
                    "    },",
                    "    name:'bd_content'",
                    "});",
                    "",
                    "/* set path of thumbnail */",
                    "fields.push({",
                    "    convert:function(v, rec){",
                    "        if(rec.data.bd_file !== undefined){",
                    "            if(rec.data.bd_file.length > 0){",
                    "                if(rec.data.bd_file[0].file_width !== 0){",
                    "                    v = v + '/T';",
                    "                }",
                    "            }",
                    "            else{",
                    "                //* in case none of file uploaded */",
                    "                v = 'resources/images/ico_noimage.gif';",
                    "            }",
                    "        }",
                    "        else{",
                    "            v = 'resources/images/ico_noimage.gif';",
                    "        }",
                    "        return v;",
                    "    },",
                    "    mapping: 'bd_file[0].thumb_path',",
                    "    name: 'thumb_path'",
                    "});",
                    "",
                    "/* set path for downloading */",
                    "fields.push({",
                    "    convert: function(v, rec) {",
                    "        var fileInfo = rec.data.bd_file;",
                    "        var value;",
                    "        if(fileInfo !== undefined){",
                    "            if(fileInfo.length > 0){",
                    "                if(fileInfo[0].file_width !== 0){",
                    "                    /* in case file size is too big */",
                    "                    if(rec.data.file_width * rec.data.file_height > 4000000){",
                    "                        value = fileInfo[0].thumb_path;",
                    "                    }",
                    "                    else{",
                    "                        value = fileInfo[0].file_path;",
                    "                    }",
                    "                }",
                    "                else{",
                    "                    value = fileInfo[0].thumb_path;",
                    "                }",
                    "            }",
                    "            else{",
                    "                //파일없이 등록된 자료",
                    "                value = 'resources/images/ico_noimage.gif';",
                    "            }",
                    "        }",
                    "        else{",
                    "            value = 'resources/images/ico_noimage.gif';",
                    "        }",
                    "        return value;",
                    "    },",
                    "    name: 'file_path'",
                    "});",
                    "",
                    "/* if file is image, set image width */",
                    "fields.push({",
                    "    convert: function(v, rec) {",
                    "        if(v === undefined) v = 0;",
                    "        return v;",
                    "    },",
                    "    mapping: 'bd_file[0].file_width',",
                    "    name: 'file_width'",
                    "});",
                    "",
                    "/* if file is image, set image height */",
                    "fields.push({",
                    "    convert: function(v, rec) {",
                    "        if(v === undefined) v = 0;",
                    "        return v;",
                    "    },",
                    "    mapping: 'bd_file[0].file_height',",
                    "    name: 'file_height'",
                    "});",
                    "",
                    "/* file size */",
                    "fields.push({",
                    "    convert: function(v, rec) {",
                    "        if(v === undefined){return 0;}",
                    "        if (v === 0) { return 0; }",
                    "        var e = Math.floor(Math.log(v) / Math.log(1024));",
                    "        return (v/Math.pow(1024, e)).toFixed(2)+' '+' KMGTP'.charAt(e)+'B';",
                    "    },",
                    "    mapping: 'bd_file[0].file_size',",
                    "    name: 'file_size'",
                    "});",
                    "",
                    "//////* generating custom fields *//////",
                    "Ext.Array.each(cols, function(item){",
                    "    var fType = 'auto';",
                    "    var fName = 'id' + item.cols_idx;",
                    "    /* special name for request id */",
                    "    if(item.cols_type == 'idx'){",
                    "        fName = 'idx';",
                    "        indexFieldId = item.cols_idx; // save cols_idx of index key",
                    "    }",
                    "    if(item.cols_type == 'date'){",
                    "        fType = 'date';",
                    "    }",
                    "",
                    "    fields.push({",
                    "        type:fType,",
                    "        convert: function(v, rec) {",
                    "            var value = '';",
                    "            Ext.Array.each(v, function(entry, index){",
                    "                if(entry.cols_idx == item.cols_idx){",
                    "                    if(item.cols_type == 'colorchk'){//for normal colorchk field",
                    "                        var values = [];",
                    "                        value = [];",
                    "                        if(entry.data_val !== ''){",
                    "                            values = entry.data_val.split(',');",
                    "                            Ext.Array.each(values, function(entry){",
                    "                                value.push(entry.trim().split('||'));",
                    "                            });",
                    "                        }",
                    "                    }",
                    "                    else{",
                    "                        value = entry.data_val;",
                    "                    }",
                    "                    /* add cols_type to recode.bd_data */",
                    "                    entry.cols_type = item.cols_type;",
                    "                }",
                    "            });",
                    "            return value;",
                    "        },",
                    "        mapping:'bd_data',",
                    "        name: fName",
                    "    });",
                    "/* add for graphical colorchk */",
                    "    if(item.cols_type == 'colorchk'){//",
                    "        fields.push({",
                    "            convert: function(v, rec) {",
                    "                var value = [];",
                    "                value = rec.get(fName);",
                    "                var val = '';",
                    "                Ext.Array.each(value, function(entry){",
                    "                    val += '<div style=\"float:left;height:100%;margin-right:8px;\">';",
                    "                    val += '<div style=\"float:left;background-color:' + entry[0] + ';width:13px;height:13px;color:white;padding-left:5px\"></div>';",
                    "                    val += '<div style=\"float:left;margin-left:6px\">' + entry[1] +'</div>';",
                    "                    val += '</div>';",
                    "                });",
                    "                if(value.length === 0) val = '';",
                    "                return val;",
                    "            },",
                    "            name: 'visibleColorchk' + item.cols_idx",
                    "        });",
                    "    }",
                    "});",
                    "return fields;"
                ]
            },
            "name": "getDataFields",
            "designerId": "c2cd62f3-1e51-40d3-9a75-2ef687ffd3ff"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "cols"
                ],
                "fn": "getGridColumns",
                "implHandler": [
                    "",
                    "var columns = [];",
                    "/* Detail list mode */",
                    "var mode = window.localStorage.getItem('isSimpleMode');",
                    "var basicInfoWidth;",
                    "var fx = 0;",
                    "if(mode == 'true'){",
                    "    basicInfoWidth = '100%';",
                    "    fx = 1;",
                    "    ",
                    "}",
                    "else{",
                    "    basicInfoWidth = 320;",
                    "}",
                    "var colsSimple = {",
                    "    xtype: 'gridcolumn',",
                    "    width:basicInfoWidth,",
                    "    flex:fx,",
                    "    text: locale.main.description,",
                    "    renderer:function(value, metaData, record){",
                    "        var colorchkVal = '';",
                    "        Ext.Object.each(record.data, function(key, value){",
                    "            if(key.slice(0, 15) == 'visibleColorchk'){",
                    "                colorchkVal = value;",
                    "            }",
                    "        });",
                    "        /* all lines in one line */",
                    "        var content = record.get('bd_content').replace(/<br>/gi, ' &nbsp; ');",
                    "        /* html tag 제거 */",
                    "        content = content.replace(/(<([^>]+)>)/ig, \"\");",
                    "        var titleRow;",
                    "        if(record.get('bd_colortag') === ''){",
                    "            titleRow = '<span style=\"float:left;font-weight:bold;font-size:15px\">' + record.get('bd_subject') + '</span>';",
                    "        }",
                    "        /* if colortag exists show it infront of title */",
                    "        else{",
                    "            titleRow  = '<div style=\"float:left;width:14px;height:14px;background-color:' + record.get('bd_colortag') + '\">';",
                    "            titleRow += '</div><span style=\"float:left;margin-left:2px;font-weight:bold;font-size:15px\">' + record.get('bd_subject') + '</span>';",
                    "        }",
                    "        var html  = '<div style=\"width:100%;overflow:hidden\">';",
                    "        html += '<table width=100%><tr><td colspan=\"2\">' + titleRow + '</td></tr>';",
                    "        if(record.get('idx') !== undefined){",
                    "            html += '<tr><td  style=\"width:90px\"><div style=\"font-size:12px;margin:-2px 0 0 0\">ID: ' + record.get('idx') + '</div></td>';",
                    "            html += '<td><div style=\"font-size:12px;margin:-2px 0 0 0\">' + locale.main.user +  ' : ' + record.get('bd_name') + '&nbsp;&nbsp;';",
                    "            html += ' <span style=\"color:#999999\">' + record.get('bd_regdate') + '</span></div></td></tr>';",
                    "        }",
                    "        else{",
                    "            html += '<tr><td colspan=\"2\"><div style=\"font-size:12px;margin:-2px 0 0 0;width:100%\">' + locale.main.user +  ' : ' + record.get('bd_name') + '&nbsp;&nbsp;';",
                    "            html += ' <span style=\"color:#999999\">' + record.get('bd_regdate') + '</span></div></td></tr>';",
                    "        }",
                    "        if(mode == 'true'){",
                    "            /* if colorchk field exists show the first one */",
                    "            if(colorchkVal !== ''){",
                    "                html    += '<tr><td colspan=\"2\">' + colorchkVal + '</td></tr>';",
                    "            }",
                    "        }",
                    "        html    += '<tr><td colspan=\"2\"><div style=\"over-flow:hidden;width:100%;height:12px;color:#777777;margin-top:-2px\">' + content + '</div></td></tr>';",
                    "        html    += '</table>';",
                    "        html    += '</div>';",
                    "        return html;",
                    "    }",
                    "};",
                    "columns.push(colsSimple);",
                    "",
                    "/* for detail display mode */",
                    "if(mode === 'false'){",
                    "    if(selectedCategory !== ''){",
                    "        for(var i=0; i<cols.length; i++){",
                    "            var dIdx = cols[i].cols_name.replace(' ', '_');",
                    "            dIdx = 'id' + cols[i].cols_idx;",
                    "            /* in case auto numbering field */",
                    "            if(cols[i].cols_type === 'idx'){",
                    "                //                 var colsIdx = {",
                    "                //                     xtype: 'gridcolumn',",
                    "                //                     dataIndex: 'idx',",
                    "                //                     text: 'ID'",
                    "                //                 };",
                    "                //                 /* place it to the first column */",
                    "                //                 columns.unshift(colsIdx);",
                    "            }",
                    "            /* in case colorcheck field */",
                    "            else if(cols[i].cols_type === 'colorchk'){",
                    "                var colsStatus = {",
                    "                    xtype: 'gridcolumn',",
                    "                    sortable:false,",
                    "                    colsInfo:cols[i],",
                    "                    dataIndex: 'visibleColorchk' + cols[i].cols_idx,",
                    "                    text: cols[i].cols_name",
                    "                };",
                    "                columns.push(colsStatus);",
                    "            }",
                    "            /* in case common custom fields */",
                    "            else{",
                    "                var c = Ext.create('Ext.grid.column.Column', {",
                    "                    xtype: 'gridcolumn',",
                    "                    dataIndex: dIdx,",
                    "                    sortable:false,",
                    "                    colsInfo:cols[i],",
                    "                    text: cols[i].cols_name",
                    "                });",
                    "                columns.push(c);",
                    "            }",
                    "        }",
                    "    }",
                    "}",
                    "",
                    "/* 첨부파일 */",
                    "var tImage = {",
                    "    xtype: 'gridcolumn',",
                    "    dataIndex: 'thumb_path',",
                    "    sortable:false,",
                    "    text: locale.main.refImageTitle,",
                    "    width:92,",
                    "    renderer:function(value, metaData, record){",
                    "        value += '?c=' + randomString(16);",
                    "        var conSize = '72';",
                    "        var fw = record.get('file_width');",
                    "        var fh = record.get('file_height');",
                    "        var sizeType;",
                    "        if(fw < conSize && fh < conSize){",
                    "            sizeType = 'auto;background-position:center';",
                    "        }",
                    "        else{",
                    "            sizeType = 'cover;background-position:center';",
                    "        }",
                    "        var css = 'width:'+ conSize +'px;height:'+ conSize +'px;';",
                    "        css    += 'background-image:url(' + value + ');background-size:'+ sizeType +';background-repeat: no-repeat;';",
                    "        css    += 'border:2px solid #555555';",
                    "        value = '<div style=\"' + css + '\">';",
                    "        if(record.get('bd_file').length > 1){",
                    "            value += '<div style=\"color:white;font-size:12px;display:inline-block;background-color:black;padding:3px\">';",
                    "            value += record.get('bd_file').length;",
                    "            value += '</div>';",
                    "        }",
                    "        value += '</div>';",
                    "        return value;",
                    "    }",
                    "};",
                    "",
                    "columns.unshift(tImage);",
                    "",
                    "return columns;"
                ]
            },
            "name": "getGridColumns",
            "designerId": "c9a8c0c9-93f9-41f9-a429-b76d0ec9bddf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "createNewGid -> getServerData -> setCategoryInfo"
                ],
                "designer|params": [
                    "cId",
                    "title",
                    "gridType",
                    "tabIndex"
                ],
                "fn": "createNewGrid",
                "implHandler": [
                    "var me = this;",
                    "/* to check a grid for category has been added already */",
                    "var isAdded = false;",
                    "Ext.Array.each(me.getWestPanel().items.items, function(entry, index){",
                    "    if(entry.categoryId == cId){",
                    "        me.getWestPanel().setActiveItem(entry);",
                    "        isAdded = true;",
                    "    }",
                    "});",
                    "if(isAdded){",
                    "    return;",
                    "}",
                    "var pageToolBar = {",
                    "    xtype: 'pagingtoolbar',",
                    "    dock: 'top',",
                    "    height: 45,",
                    "    width: 360,",
                    "    displayInfo: true,",
                    "    displayMsg: 'Data {0} - {1} of {2}',",
                    "    items: [",
                    "        {",
                    "            xtype: 'tbseparator'",
                    "        },",
                    "        {",
                    "            xtype: 'textfield',",
                    "            itemId:'fdSearchAll',",
                    "            cls: 'searchbox',",
                    "            margin: '0 0 0 3',",
                    "            fieldLabel: 'Label',",
                    "            hideLabel: true",
                    "        },",
                    "        {",
                    "            xtype: 'button',",
                    "            handler: function(button, e) {",
                    "                var fd = button.up('pagingtoolbar').down('#fdSearchAll');",
                    "                fd.setValue('');",
                    "            },",
                    "            itemId: 'clearField',",
                    "            icon: 'resources/images/ico_clear.png',",
                    "            tooltip:locale.menu.clear",
                    "        },",
                    "        {",
                    "            xtype: 'button',",
                    "            margin: '0 6 0 0',",
                    "            icon: 'resources/images/find.png',",
                    "            tooltip:locale.search.search,",
                    "            /* serach data from selected category */",
                    "            handler:function(button){",
                    "                var val = button.up('pagingtoolbar').down('#fdSearchAll').getValue();",
                    "                var query = '&ca_id='+ cId + '&se_all=' + val ;",
                    "                var iid = 'dStore_' + cId;",
                    "                var store = Ext.getStore(iid);",
                    "                /* to avoid searching by current page set to the first page */",
                    "                store.currentPage = 1;",
                    "                getController('Search').search(query, store);",
                    "            }",
                    "        },",
                    "        {",
                    "            xtype: 'tbseparator'",
                    "        },",
                    "        {",
                    "            xtype: 'button',",
                    "            margin: '0 6 0 6',",
                    "            icon: 'resources/images/ico_search.png',",
                    "            tooltip:locale.search.detailSearch,",
                    "            handler:function(button){",
                    "                var win = Ext.create('Ext.window.Window', {",
                    "                    layout:{",
                    "                        type:'vbox',",
                    "                        align:'stretch'",
                    "                    },",
                    "                    ghost:false,",
                    "                    modal:true,",
                    "                    width:490,",
                    "                    padding:5,",
                    "                    tools: [",
                    "                        {",
                    "                            xtype: 'tool',",
                    "                            itemId: 'refresh',",
                    "                            tooltipType: 'title',",
                    "                            type: 'refresh',",
                    "                            bind: {",
                    "                                tooltip: '{refresh}'",
                    "                            },",
                    "                            listeners: {",
                    "                                click: function(){",
                    "                                    win.down('#fdSubject').setValue('');",
                    "                                    win.down('#fdContent').setValue('');",
                    "                                    win.down('#sDate').setValue(null);",
                    "                                    win.down('#eDate').setValue(null);",
                    "                                    win.down('#fdMonth').setValue('');",
                    "                                    win.down('#fdYear').setValue('');",
                    "                                }",
                    "                            }",
                    "                        }",
                    "                    ],",
                    "                    bodyStyle:'padding:15px',",
                    "                    title:locale.search.detailSearch,",
                    "                    items:[",
                    "                        {",
                    "                            /* by subject */",
                    "                            xtype:'textfield',",
                    "                            itemId: 'fdSubject',",
                    "                            labelAlign:'top',",
                    "                            fieldLabel:locale.main.title,",
                    "                            cls:'requestform-space'",
                    "                        },",
                    "                        {",
                    "                            /* by content */",
                    "                            xtype:'textfield',",
                    "                            itemId: 'fdContent',",
                    "                            labelAlign:'top',",
                    "                            fieldLabel:locale.main.description,",
                    "                            cls:'requestform-space'",
                    "                        },",
                    "                        {",
                    "                            /* registed data label */",
                    "                            xtype:'label',",
                    "                            text:locale.main.regDate,",
                    "                            cls: 'x-form-item-label-default'",
                    "                        },",
                    "                        {",
                    "                            /* date range */",
                    "                            xtype:'container',",
                    "                            layout:'hbox',",
                    "                            cls:'requestform-space',",
                    "                            style:'border:1px solid #ccd0d5',",
                    "                            padding:10,",
                    "                            items:[",
                    "                                {",
                    "                                    /* date search label */",
                    "                                    xtype:'label',",
                    "                                    text:locale.search.from,",
                    "                                    cls: 'x-form-item-label-default'",
                    "                                },",
                    "                                {",
                    "                                    /* search label 'from' */",
                    "                                    xtype:'datefield',",
                    "                                    itemId:'sDate',",
                    "                                    submitFormat:'Y/m/d'",
                    "                                },",
                    "                                {",
                    "                                    xtype:'tbspacer',",
                    "                                    flex:1",
                    "                                },",
                    "                                {",
                    "                                    /* date search label */",
                    "                                    xtype:'label',",
                    "                                    text:locale.search.to,",
                    "                                    cls: 'x-form-item-label-default'",
                    "                                },",
                    "                                {",
                    "                                    /* search label 'to' */",
                    "                                    xtype:'datefield',",
                    "                                    itemId:'eDate',",
                    "                                    submitFormat:'Y/m/d'",
                    "                                }",
                    "                            ]",
                    "                        },",
                    "                        {",
                    "                            /* search monthly label */",
                    "                            xtype:'label',",
                    "                            text:locale.search.monthly,",
                    "                            cls: 'x-form-item-label-default'",
                    "                        },",
                    "                        {",
                    "                            /* monthly combos */",
                    "                            xtype:'container',",
                    "                            layout:'hbox',",
                    "                            cls:'requestform-space',",
                    "                            style:'border:1px solid #ccd0d5',",
                    "                            padding:10,",
                    "                            items:[",
                    "                                {",
                    "                                    /* year label */",
                    "                                    xtype:'label',",
                    "                                    text:locale.search.year,",
                    "                                    cls: 'x-form-item-label-default'",
                    "                                },",
                    "                                /* combo for year */",
                    "                                Ext.create('Ext.form.field.ComboBox', {",
                    "                                    displayField:'years',",
                    "                                    itemId:'fdYear',",
                    "                                    listeners:{",
                    "                                        render:function(combo){",
                    "                                            var yData = [];",
                    "                                            var date = new Date();",
                    "                                            var year = date.getFullYear();",
                    "                                            for(var i=year; i> year - 5; i--){",
                    "                                                yData.push({years:i});",
                    "                                            }",
                    "                                            /* store for the first combobox */",
                    "                                            var yStore = Ext.create('Ext.data.Store', {",
                    "                                                fields:['years'],",
                    "                                                data : yData",
                    "                                            });",
                    "                                            combo.setStore(yStore);",
                    "                                            //                                                     combo.setValue(yData[0].years);",
                    "                                        }",
                    "                                    }",
                    "                                }),",
                    "                                {",
                    "                                    xtype:'tbspacer',",
                    "                                    flex:1",
                    "                                },",
                    "                                {",
                    "                                    /* month label */",
                    "                                    xtype:'label',",
                    "                                    text:locale.search.month,",
                    "                                    cls: 'x-form-item-label-default'",
                    "                                },",
                    "                                /* combo for month */",
                    "                                Ext.create('Ext.form.field.ComboBox', {",
                    "                                    displayField:'months',",
                    "                                    itemId:'fdMonth',",
                    "                                    listeners:[",
                    "                                        {",
                    "                                            render:function(combo){",
                    "                                                var mData = [];",
                    "                                                for(var i=1; i<= 12; i++){",
                    "                                                    mData.push({months:i});",
                    "                                                }",
                    "                                                /* store for the first combobox */",
                    "                                                var mStore = Ext.create('Ext.data.Store', {",
                    "                                                    fields:['months'],",
                    "                                                    data : mData",
                    "                                                });",
                    "                                                var date = new Date();",
                    "                                                var month = date.getMonth();",
                    "                                                combo.setStore(mStore);",
                    "                                                //combo.setValue(month + 1);",
                    "                                            },",
                    "                                            select:function(combo){",
                    "                                                var fdYearVal = win.down('#fdYear').getValue();",
                    "                                                var fdMonth = win.down('#fdMonth');",
                    "                                                if(!fdYearVal){",
                    "                                                    alert(locale.search.yearRequired);",
                    "                                                    fdMonth.setValue(null);",
                    "                                                }",
                    "                                            }",
                    "                                        }",
                    "                                    ]",
                    "                                })",
                    "                            ]",
                    "                        },",
                    "                        {",
                    "                            /* buttons container */",
                    "                            xtype:'container',",
                    "                            padding:'15 0 10 0',",
                    "                            layout:{",
                    "                                type:'hbox',",
                    "                                pack:'center'",
                    "                            },",
                    "                            items:[",
                    "                                {",
                    "                                    xtype:'button',",
                    "                                    width:100,",
                    "                                    text:locale.search.search,",
                    "                                    handler:function(button){",
                    "                                        var query = '&ca_id=' + selectedCategory;",
                    "                                        if(win.down('#fdSubject').getValue() !== ''){",
                    "                                            query += '&se_subject=' + win.down('#fdSubject').getValue();",
                    "                                        }",
                    "                                        else if(win.down('#fdContent').getValue() !== ''){",
                    "                                            query += '&se_content=' + win.down('#fdContent').getValue();",
                    "                                        }",
                    "                                        else if(win.down('#fdYear').getValue()){",
                    "                                            var fdYVal = win.down('#fdYear').getValue();",
                    "                                            var fdMVal = win.down('#fdMonth').getValue();",
                    "                                            var ymVals;",
                    "                                            var ymVale;",
                    "                                            var lastday = 32 - new Date(fdYVal, fdMVal-1, 32).getDate();",
                    "                                            if(fdMVal && fdMVal){//년도와 월이 있는 경우 해당 월 모두 검색",
                    "                                                fdMVal = fdMVal.toString();",
                    "                                                fdYVal = fdYVal.toString();",
                    "                                                ymVals = fdYVal + '/' + '0'+ fdMVal.slice(-2) + '/01';",
                    "                                                ymVale = fdYVal + '/' + '0'+ fdMVal.slice(-2) + '/' + lastday;",
                    "                                                query += '&se_sdate=' + ymVals + '&se_edate=' + ymVale;",
                    "                                            }",
                    "                                            if(fdYVal && !fdMVal){//년도만 선택 된 경우 해당 년도 모두 검색",
                    "                                                fdYVal = fdYVal.toString();",
                    "                                                ymVals = fdYVal + '/01/01';",
                    "                                                ymVale = fdYVal + '/12/31';",
                    "                                                query += '&se_sdate=' + ymVals + '&se_edate=' + ymVale;",
                    "                                            }",
                    "                                        }",
                    "                                        else if(win.down('#eDate').getValue() || win.down('#sDate').getValue()){",
                    "                                            var sVal = win.down('#sDate').getValue();",
                    "                                            var eVal = win.down('#eDate').getValue();",
                    "",
                    "                                            if(sVal !== null){",
                    "                                                if(localLanguage == 'Korean'){",
                    "                                                    sVal = sVal.getFullYear() + '/' + ('0'+ (sVal.getMonth() + 1)).slice(-2) + '/' + ('0' + sVal.getDate()).slice(-2);",
                    "                                                }",
                    "                                                else{",
                    "                                                    sVal = ('0'+ (sVal.getMonth() + 1)).slice(-2) + '/' + ('0' + sVal.getDate()).slice(-2) + '/' + sVal.getFullYear();",
                    "                                                }",
                    "                                            }",
                    "                                            else{",
                    "                                                /* searching for 1 day by datefeild that has a value */",
                    "                                                sVal = '';",
                    "                                                if(eVal){",
                    "                                                    sVal = eVal;",
                    "                                                }",
                    "                                            }",
                    "                                            if(eVal !== null){",
                    "                                                if(localLanguage == 'Korean'){",
                    "                                                    eVal = eVal.getFullYear() + '/' + ('0'+ (eVal.getMonth() + 1)).slice(-2) + '/' + ('0' + eVal.getDate()).slice(-2);",
                    "                                                }",
                    "                                                else{",
                    "                                                    eVal = ('0'+ (eVal.getMonth() + 1)).slice(-2) + '/' + ('0' + eVal.getDate()).slice(-2) + '/' + eVal.getFullYear();",
                    "                                                }",
                    "                                            }",
                    "                                            else{",
                    "                                                eVal = '';",
                    "                                                /* searching for 1 day by datefeild that has a value */",
                    "                                                if(sVal){",
                    "                                                    eVal = sVal;",
                    "                                                }",
                    "                                            }",
                    "",
                    "                                            query += '&se_sdate=' + sVal + '&se_edate=' + eVal;",
                    "                                        }",
                    "                                        else{",
                    "                                            alert(locale.search.nothingToSearch);",
                    "                                            win.down('#fdSubject').focus();",
                    "                                            return;",
                    "                                        }",
                    "",
                    "                                        var store = grid.getStore();",
                    "                                        /* to avoid searching by current page set to the first page */",
                    "                                        store.currentPage = 1;",
                    "                                        getController('Search').search(query, store);",
                    "                                    }",
                    "                                },",
                    "                                {",
                    "                                    xtype:'button',",
                    "                                    width:100,",
                    "                                    margin:'0 0 0 15',",
                    "                                    text:locale.menu.close,",
                    "                                    handler:function(button){",
                    "                                        win.close();",
                    "                                    }",
                    "                                }",
                    "                            ]",
                    "                        }",
                    "                    ]",
                    "                }).show();",
                    "            }",
                    "        }",
                    "    ]",
                    "};",
                    "",
                    "var sm = new Ext.selection.CheckboxModel({",
                    "    checkOnly: false",
                    "});",
                    "",
                    "if(gridType === undefined || gridType == 'null') gridType = 'normal';",
                    "if(gridType == 'normal'){",
                    "    //* create grid for server data */",
                    "    grid = Ext.create('Ext.grid.Panel', {",
                    "        title:title,",
                    "        categoryId:cId,",
                    "        closable:true,",
                    "        enableCtxMenu:false,",
                    "        type:gridType,",
                    "        selModel: {",
                    "            selType: 'checkboxmodel',",
                    "            mode:'SINGLE'",
                    "        },",
                    "        itemId:'mainGrid_' + cId,",
                    "        id:'mainGrid_' + cId,",
                    "        listeners:[",
                    "            {",
                    "                itemclick:function(grid, record, item, index, e, eOpts){",
                    "                    me.viewDocument(record.get('ca_id'), record.get('bd_idx'));",
                    "                },",
                    "                headerclick:function( ct, column, e, t, eOpts){",
                    "                    var cif = column.colsInfo;",
                    "                    if(cif !== undefined){//when header has cols information(given by getGridColumns())",
                    "                        var menu = Ext.create('Ext.menu.Menu');",
                    "                        if(cif.cols_type == 'radio' || cif.cols_type == 'select' || cif.cols_type == 'check'){",
                    "                            Ext.Array.each(cif.cols_data, function(entry){",
                    "                                var item = {",
                    "                                    text:entry,",
                    "                                    listeners:[",
                    "                                        {",
                    "                                            click:function(item, e){",
                    "                                                var store = grid.getStore();",
                    "                                                store.currentPage = 1;",
                    "                                                var idx = getController('Search').getSearchIdx(cif.cols_idx);",
                    "                                                var query = '&ca_id=' + grid.categoryId + '&se_data_'+idx+'='+item.text;",
                    "                                                getController('Search').search(query, store);",
                    "                                            }",
                    "                                        }",
                    "                                    ]",
                    "                                };",
                    "                                menu.add(item);",
                    "                                menu.showBy(e.target, 'tc-bc');",
                    "                            });",
                    "                        }",
                    "                        else if(cif.cols_type == 'colorchk'){",
                    "                            Ext.Array.each(cif.cols_data, function(entry){",
                    "                                var html = '<div style=\"float:left;width:13px;height:13px;background-color:'+entry[1]+'\"></div>';",
                    "                                html += '<span style=\"float:left;margin-left:3px\">' + entry[0] + '</span>';",
                    "                                var item = {",
                    "                                    xtype:'button',",
                    "                                    ui: 'plain-toolbar-small',",
                    "                                    textAlign:'left',",
                    "                                    height:25,",
                    "                                    value: encodeURIComponent(entry[2]),",
                    "                                    html:html,",
                    "                                    handler:function(button){",
                    "                                        var idx = getController('Search').getSearchIdx(cif.cols_idx);",
                    "                                        var store = grid.getStore();",
                    "                                        store.currentPage = 1;",
                    "                                        var query = '&ca_id=' + grid.categoryId + '&se_data_'+idx+'='+button.value.toString();",
                    "                                        getController('Search').search(query, store);",
                    "                                        menu.destroy();",
                    "                                    }",
                    "                                };",
                    "                                menu.add(item);",
                    "                                menu.showBy(e.target, 'tc-bc');",
                    "                            });",
                    "                        }",
                    "                        else if(cif.cols_type == 'textarea' || cif.cols_type == 'datagrp' || cif.cols_type == 'text' || cif.cols_type == 'dbtext' || cif.cols_type == 'number' || cif.cols_type == 'dbl_select' || cif.cols_type == 'url'){",
                    "                            var item = Ext.create('Ext.form.field.Text',{",
                    "                                xtype:'textfield',",
                    "                                width:120,",
                    "                                margin:5,",
                    "                                listeners:[",
                    "                                    {",
                    "                                        render:function(textfield){",
                    "                                            textfield.el.on('keyup', function(e){",
                    "                                                if(e.keyCode == 13){",
                    "                                                    var idx = getController('Search').getSearchIdx(cif.cols_idx);",
                    "                                                    var store = grid.getStore();",
                    "                                                    store.currentPage = 1;",
                    "                                                    var query = '&ca_id=' + grid.categoryId + '&se_data_'+idx+'='+item.getValue();",
                    "                                                    getController('Search').search(query, store);",
                    "                                                    menu.destroy();",
                    "                                                }",
                    "                                            });",
                    "                                        }",
                    "                                    }",
                    "                                ]",
                    "                            });",
                    "                            menu.add(item);",
                    "                            menu.showBy(e.target, 'tc-bc');",
                    "                        }",
                    "",
                    "                    }",
                    "                }",
                    "            }",
                    "        ],",
                    "        dockedItems: [pageToolBar]",
                    "    });",
                    "}",
                    "if(gridType == 'gallery'){",
                    "    grid= Ext.create('Ext.panel.Panel', {",
                    "        type:gridType,",
                    "        title:title,",
                    "        categoryId:cId,",
                    "        scrollable:true,",
                    "        itemId:'mainGrid_' + cId,",
                    "        bodyStyle:'background-color:#e9e9e9',",
                    "        closable:true,",
                    "        items:[",
                    "            Ext.create('Ext.view.View',{",
                    "                width:'100%',",
                    "                height:'100%',",
                    "                tpl:[",
                    "                    '<div class=\"columns\" currentIndex=\"0\">',",
                    "                    '<tpl for=\".\">',",
                    "                    '<div class=\"pin\"  style=\"opacity:0\">',",
                    "                    '<img class=\"item\" src=\"{[this.checkIfImage(values)]}\" xcount=\"{[this.getTplLength(xcount)]}\" xindex=\"{#}\"  onload=\"getController(\\'Main\\').onTplImageLoad(this)\">',",
                    "                    '<div style=\"padding:8px;font-weight:bold\">',",
                    "                    '<tpl if=\"values.bd_file.length &gt; 1\">',",
                    "                    '<font style=\"padding:1px 3px 1px 3px;margin-right:4px;background-color:black;font-size:11px;color:white;width:15px;height:15px;text-align:center\">',",
                    "                    '{[this.getFileLength(values)]}</font>',",
                    "                    '</tpl>',",
                    "                    '<font>{bd_subject}</font>',",
                    "                    '</div>',",
                    "                    '<div class=\"describe\">{bd_content}</div>',",
                    "                    '</div>',",
                    "                    '</tpl>',",
                    "                    '</div>',",
                    "                    {",
                    "                        getTplLength:function(xcount){",
                    "                            return xcount;",
                    "                        },",
                    "                        getThumbnail:function(values){",
                    "                            var val = '';",
                    "                            if(values.bd_file[0] === undefined){",
                    "                                val = 'resources/images/ico_noimage.gif';",
                    "                            }",
                    "                            else{",
                    "                                val = values.bd_file[0].thumb_path + '/M';",
                    "                            }",
                    "                            return val;",
                    "                        },",
                    "                        getFileLength:function(values){",
                    "                            var val = '';",
                    "                            if(!values.bd_file){",
                    "                                val = 0;",
                    "                            }",
                    "                            else{",
                    "                                val = values.bd_file.length;",
                    "                            }",
                    "                            return val;",
                    "                        },",
                    "                        checkIfImage:function(values){",
                    "                            var files = values.bd_file;",
                    "                            var val = 'resources/images/ico_noimage.gif';",
                    "                            if(files && files[0]){",
                    "                                var fileName = files[0].file_name;",
                    "                                var tmpArr = fileName.split('.');",
                    "                                var ext = '';",
                    "                                if(tmpArr.length > 1){",
                    "                                    ext = tmpArr[tmpArr.length - 1];",
                    "                                }",
                    "                                if(ext == 'tif' || ext == 'psd' || ext == 'jpg' || ext == 'pdf' || ext == 'bmp' || ext == 'gif' || ext == 'png' || ext == 'ai'){",
                    "                                    if(ext=='pdf' || ext=='tif' || ext=='bmp' || ext=='psd' || ext=='ai'){",
                    "                                        /* for having a problem that is not corrently converted */",
                    "                                        if(files[0].width == 32 && fiels[0].height == 32){",
                    "                                            val = 'resources/images/ico_noimage.gif';",
                    "                                        }",
                    "                                        /* for corrently converted not normal format */",
                    "                                        else{",
                    "                                            val = files[0].thumb_path + '/M';",
                    "                                        }",
                    "                                    }",
                    "                                    else{",
                    "                                        val = files[0].thumb_path + '/M';",
                    "                                    }",
                    "                                }",
                    "                            }",
                    "                            return val;",
                    "                        }",
                    "                    }",
                    "                ],",
                    "                itemSelector: 'div.pin',",
                    "                listeners:[",
                    "                    {",
                    "                        itemclick:function(grid, record, item, index, e, eOpts ){",
                    "                            me.viewDocument(record.get('ca_id'), record.get('bd_idx'));",
                    "                        }",
                    "                    }",
                    "                ]",
                    "            })",
                    "        ],",
                    "        dockedItems: [pageToolBar]",
                    "    });",
                    "}",
                    "",
                    "me.getWestPanel().insert(tabIndex, grid);",
                    "me.getServerData(cId, '&ca_id=' + cId, grid);",
                    "me.getWestPanel().setActiveItem(grid);",
                    "/* hide view content */",
                    "me.getViewPan().down('#viewCon').setHidden(true);"
                ]
            },
            "name": "createNewGrid",
            "designerId": "e5ab75a9-11ab-454e-9424-0b0e3a485cce"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "target"
                ],
                "fn": "onTplImageLoad",
                "implHandler": [
                    "var target = Ext.get(target);",
                    "Ext.Animator.run({",
                    "    element: target.up('.pin'),",
                    "    duration: 150,",
                    "    easing: 'ease-in',",
                    "    preserveEndState: true,",
                    "    from: {",
                    "        opacity: 0",
                    "    },",
                    "    to: {",
                    "        opacity: 1",
                    "    }",
                    "});"
                ]
            },
            "name": "onTplImageLoad",
            "designerId": "31493fa7-3c00-4768-8fc7-d39305a2d3bf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "cId",
                    "query",
                    "grid"
                ],
                "fn": "getServerData",
                "implHandler": [
                    "var me = this;",
                    "Ext.data.JsonP.request({",
                    "    url:getDataWriteApi(),",
                    "    params:{",
                    "        ca_id:cId,",
                    "        html:0",
                    "    },",
                    "    success:function(response){",
                    "        var colsList = response.categoryColsList;",
                    "        /* do not reload fStore by LinkingWindow */",
                    "        if(grid.getItemId() == 'mainGrid_' + cId){",
                    "            /* field store */",
                    "            var fStore = Ext.getStore('fStore_' + cId);",
                    "            if(fStore === undefined){",
                    "                fStore = Ext.create(appName + '.store.FieldStore',{",
                    "                    storeId:'fStore_' + cId,",
                    "                    data:colsList",
                    "                });",
                    "            }",
                    "        }",
                    "        /* create fields that needs for store datalist store model */",
                    "        var flds = me.getDataFields(colsList);",
                    "        /* store for grid */",
                    "        var dStore;",
                    "        dStore = Ext.create('Ext.data.Store', {",
                    "            storeId:'dStore_' + cId,",
                    "            fields: flds,",
                    "            pageSize:50,",
                    "            proxy: {",
                    "                type: 'jsonp',",
                    "                url:getDataListByIdApi(query, true),",
                    "                limitParam:'page_size',",
                    "                reader: {",
                    "                    type: 'json',",
                    "                    rootProperty: 'binderList',",
                    "                    totalProperty: 'page.totCount'",
                    "                }",
                    "            },",
                    "            listeners:{",
                    "                load:function onDstoreLoad(store, records){",
                    "                    dStore.un('load', onDstoreLoad);",
                    "                    /* do not excute by LinkingWindow, dataGroupWindow or so on */",
                    "                    if(grid.getItemId() == 'mainGrid_' + cId){",
                    "                        grid.categoryColsList = response.categoryColsList;",
                    "",
                    "                        me.getMainView().down('#headerPan').show();",
                    "                        var westPan = me.getWestPanel();",
                    "                        westPan.show();",
                    "                        var viewPan = me.getViewPan();",
                    "                        viewPan.show();",
                    "                        var eastPan = me.getEastPanel();",
                    "                        eastPan.show();",
                    "                        if(me.getLoginWindow() !== undefined){",
                    "                            me.getLoginWindow().destroy();",
                    "                        }",
                    "                        /* preload the upload window */",
                    "                        getController('Upload').onBtnNewClick(false);",
                    "                    }",
                    "                    /* build list */",
                    "                    /* apply store and dynamic columns to grid */",
                    "                    if(grid.type == 'normal'){",
                    "                        grid.reconfigure(dStore, me.getGridColumns(colsList));",
                    "                    }",
                    "                    /* for gallery style */",
                    "                    else{",
                    "                        grid.down('dataview').setStore(dStore);",
                    "                    }",
                    "                    var pToolbar = grid.down('pagingtoolbar');",
                    "                    pToolbar.setStore(store);",
                    "                }",
                    "            }",
                    "        });",
                    "        dStore.load();",
                    "    },",
                    "    failure:function(response){",
                    "        alert(locale.main.networkProblem);",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "getServerData",
            "designerId": "286ffb3d-ec2b-4b07-85b2-a17bc5886cb2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "idx"
                ],
                "fn": "setCommentList",
                "implHandler": [
                    "var me = this;",
                    "var cmtListUrl = getCommentListApi();",
                    "Ext.data.JsonP.request({",
                    "    url:cmtListUrl,",
                    "    params:{",
                    "        bd_idx:idx",
                    "    },",
                    "    success:function(response){",
                    "        var cmtLstCon = me.getEastPanel().down('#commentList');",
                    "        cmtLstCon.setData(response.binderCList);",
                    "        if(response.binderCList.length === 0){",
                    "            cmtLstCon.up('#commentPanel').setCollapsed(true);",
                    "        }",
                    "        else{",
                    "            cmtLstCon.up('#commentPanel').setCollapsed(false);",
                    "        }",
                    "    },",
                    "    failure:function(response){",
                    "        alert(locale.main.networkProblem);",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "setCommentList",
            "designerId": "0b32ecb7-9106-4c48-b4b0-8d6f7868bc9c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value",
                    "idx"
                ],
                "fn": "submitComment",
                "implHandler": [
                    "var me = this;",
                    "var cmtUrl = getCommentUpdateApi();",
                    "if(value === ''){",
                    "    Ext.toast(locale.main.noComment);",
                    "    return;",
                    "}",
                    "",
                    "Ext.data.JsonP.request({",
                    "    url:cmtUrl,",
                    "    params:{",
                    "        bd_idx:idx,",
                    "        cmt_content:value",
                    "    },",
                    "    success:function(response){",
                    "        if(response.result){",
                    "            Ext.toast(locale.upload.posted);",
                    "            me.setCommentList(idx);",
                    "        }",
                    "        else{",
                    "            alert(locale.main.networkProblem);",
                    "        }",
                    "    },",
                    "    failure:function(response){",
                    "        alert(locale.main.networkProblem);",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "submitComment",
            "designerId": "73a40cf6-ca1e-4ee4-adb7-bead8c1c4c1c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "newComment",
                "implHandler": [
                    "var me = this;",
                    "var chks = this.getWestPanel().getActiveTab().getSelectionModel().getSelection();",
                    "if(chks.length === 0){",
                    "    alert(locale.upload.noneSelected);",
                    "    return;",
                    "}",
                    "var bdIdx = chks[0].get('bd_idx');",
                    "",
                    "var cmtWin = Ext.create('Ext.window.Window', {",
                    "    width:600,",
                    "    height:320,",
                    "    padding:10,",
                    "    title:locale.main.newComment,",
                    "    items:[",
                    "        {",
                    "            xtype: 'htmleditor',",
                    "            height: 200,",
                    "            itemId: 'commentNew',",
                    "            style: 'background-color:#ffffff',",
                    "            width: '100%',",
                    "            hideLabel: true,",
                    "            enableFont: false",
                    "        },",
                    "        {",
                    "            xtype:'container',",
                    "            layout:{",
                    "                type:'hbox',",
                    "                pack:'center'",
                    "            },",
                    "            margin:'30 0 0 0',",
                    "            items:[",
                    "                {",
                    "                    xtype:'button',",
                    "                    text:locale.main.ok,",
                    "                    width:90,",
                    "                    handler:function(button){",
                    "                        var value = button.up('window').down('htmleditor').getValue();",
                    "                        me.submitComment(value, bdIdx);",
                    "                        button.up('window').close();",
                    "                    }",
                    "                },",
                    "                {",
                    "                    xtype:'button',",
                    "                    text:locale.upload.cancel,",
                    "                    width:90,",
                    "                    margin:'0 0 0 10',",
                    "                    handler:function(button){",
                    "                        button.up('window').close();",
                    "                    }",
                    "                }",
                    "            ]",
                    "        }",
                    "    ]",
                    "});",
                    "cmtWin.show();"
                ]
            },
            "name": "newComment",
            "designerId": "baaa3451-ef18-4482-9c73-3bcd56629933"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "printDocument",
                "implHandler": [
                    "var viewer = this.getViewPan().down('#viewer');",
                    "/* otherwise right border line can't show becaue of overflowed */",
                    "// viewer.el.select('.x-box-inner').setStyle('overflow', 'visible');",
                    "// viewer.el.select('.x-box-layout-ct').setStyle('overflow', 'visible');",
                    "if(viewer === null){",
                    "    alert(locale.main.nothingToPrint);",
                    "}",
                    "else{",
                    "    var htmlSrc = viewer.el.dom.innerHTML;",
                    "    var title = viewer.getViewModel().data.bd_subject;",
                    "    var html = '';",
                    "    html    += '<html><head>';",
                    "    if(title !== undefined){",
                    "        html += '<title>' + title + '</title>';",
                    "    }",
                    "    html    += '<link rel=\"Stylesheet\" type=\"text/css\" href=\"resources/default.css\"/>';",
                    "    html    += '<link rel=\"Stylesheet\" type=\"text/css\" href=\"resources/custom.css\"/>';",
                    "    html    += '<link rel=\"Stylesheet\" type=\"text/css\" href=\"resources/viewer.css\"/>';",
                    "    html    += '<link rel=\"Stylesheet\" type=\"text/css\" href=\"resources/FormViewer-all.css\"/>';",
                    "    html    += '<link rel=\"Stylesheet\" type=\"text/css\" href=\"resources/.arch-internal-preview.css\"/>';",
                    "    html    += '<script type=\"text/javascript\" src=\"bootstrap.js\"></script>';",
                    "    html    += '<script type=\"text/javascript\">function printIt(){';",
                    "    html    += 'document.getElementById(\"printBtn\").style.display = \"none\";';",
                    "    html    += 'window.print();';",
                    "    html    += 'this.close();';",
                    "    html    += '}</script>';",
                    "    html    += '</head><body>';",
                    "    html    += '<div style=\"padding:5px\">';",
                    "    html    += '<button id=\"printBtn\" style=\"width:100px\" onclick=\"printIt()\">' + locale.main.printIt + '</button></div>';",
                    "    html    += htmlSrc;",
                    "    html    += '</body></html>';",
                    "    var win = window.open('', '', 'width=750, height=900, scrollbars=1');",
                    "    win.document.write(html);",
                    "}"
                ]
            },
            "name": "printDocument",
            "designerId": "6ed0933e-9c89-4863-a737-6bb8b656d5cf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "target"
                ],
                "fn": "setViewFields5",
                "implHandler": [
                    "var me = this;",
                    "var ca_id = target.categoryId;",
                    "",
                    "/* 서브디렉토리까지 보이기 카테고리에서는 그리드 셀을 클릭했을 때 record의 ca_id가 */",
                    "/* 현재선택된 카테고리(parent)와 틀리기 때문에 따로 설정 */",
                    "var fStore;",
                    "// if(ca_id != selectedCategory){",
                    "//     if(Ext.getStore('fStore_' + ca_id) === undefined){",
                    "//         console.log(target.getViewModel());",
                    "//     }",
                    "//     return;",
                    "// }",
                    "// else{",
                    "//     fStore = Ext.getStore('fStore_' + ca_id);",
                    "// }",
                    "var ctair = target.down('#customFieldCon');",
                    "fStore.each(function(record){",
                    "    var val = '{id' + record.get('cols_idx') + '}';",
                    "    var fldW = '100%';",
                    "",
                    "    /* Binding custom field values */",
                    "    if(record.get('cols_type') == 'idx'){",
                    "        val = '{idx}';",
                    "    }",
                    "    if(record.get('cols_type') == 'colorchk'){",
                    "        val = '{visibleColorchk' + record.get('cols_idx') + '}';",
                    "    }",
                    "    /* preparing container for dataset. it will be filled by clicking gridcell */",
                    "    if(record.get('cols_type') == 'dataset'){",
                    "        var dsTitle = {",
                    "            xtype: 'label',",
                    "            style: {",
                    "                'font-weight': 'bold'",
                    "            },",
                    "            html:'<div style=\"margin:10px 0 5px 0\">'+record.get('cols_name') + ':</div>',",
                    "            cls:'fieldTitle'",
                    "        };",
                    "        ctair.add(dsTitle);",
                    "        var dsCon = Ext.create('Ext.container.Container', {",
                    "            width:'100%',",
                    "            height:500,",
                    "            style:'margin-bottom:10px',",
                    "            itemId:'datasetCon_' + record.get('cols_idx')",
                    "        });",
                    "        ctair.add(dsCon);",
                    "    }",
                    "    /* url field */",
                    "    else if(record.get('cols_type') == 'url'){",
                    "        var lf = Ext.create('Ext.form.field.Display',{",
                    "            xtype: 'displayfield',",
                    "            fieldLabel: record.get('cols_name'),",
                    "            width:fldW,",
                    "            margin:'-1 0 0 0',",
                    "            cls:'custom-field',",
                    "            labelClsExtra:'fieldTitle',",
                    "            bind: {",
                    "                value: val",
                    "            },",
                    "            renderer: function (value, field) {",
                    "                var slVal = value.slice(0, 7);",
                    "                if(slVal != 'http://'){",
                    "                    value = 'http://' + value;",
                    "                }",
                    "                var val = '<a href=\"' + value + '\" target=\"_blank\">' + value + '</a>';",
                    "                if(slVal === '') val = '';",
                    "                return val;",
                    "            }",
                    "        });",
                    "        ctair.add(lf);",
                    "    }",
                    "    /* Link field */",
                    "    else if(record.get('cols_type') == 'link'){",
                    "        var linkSpac = {",
                    "            xtype: 'tbspacer',",
                    "            cls: 'preview-spacer',",
                    "            margin:'0 0 0 -5px'",
                    "        };",
                    "        ctair.add(linkSpac);",
                    "        var lnkLbl = {",
                    "            xtype:'label',",
                    "            html:'<div style=\"margin:0 0 5px -5px\">' + record.get('cols_name') + '</div>',",
                    "            cls:'view-input-label'",
                    "        };",
                    "        ctair.add(lnkLbl);",
                    "        var fldKey = 'id' + record.get('cols_idx');",
                    "        var linkUnitCon = Ext.create('Ext.container.Container', {",
                    "            width:fldW,",
                    "            cls:'link-container',",
                    "            linkId:fldKey",
                    "        });",
                    "        ctair.add(linkUnitCon);",
                    "    }",
                    "    else{",
                    "        var df = Ext.create('Ext.form.field.Display',{",
                    "            xtype: 'displayfield',",
                    "            fieldLabel: record.get('cols_name'),",
                    "            width:fldW,",
                    "            style:'border:1px solid #000;',",
                    "            labelWidth:150,",
                    "            inputCls:'view-inputbox',",
                    "            bind: {",
                    "                value: val",
                    "            },",
                    "            labelClsExtra: 'view-input-label'",
                    "        });",
                    "        ctair.add(df);",
                    "    }",
                    "});",
                    ""
                ]
            },
            "name": "setViewFields5",
            "designerId": "b6b7b903-db0c-41a5-b7ca-7e326fa5f534"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "caId",
                    "bdIdx"
                ],
                "fn": "viewDocument",
                "implHandler": [
                    "var me = this;",
                    "var vPan = this.getViewPan();",
                    "var grid = me.getWestPanel().getActiveTab();",
                    "var vCon = vPan.down('#viewCon');",
                    "var splash = vPan.down('#splash');",
                    "var viewer = Ext.create(appName + '.view.Viewer');",
                    "",
                    "vPan.down('#viewCon').removeAll();",
                    "/* if selected category has no data */",
                    "if(bdIdx === undefined){",
                    "    viewer.setHtml('');",
                    "    vCon.add(viewer);",
                    "    return;",
                    "}",
                    "",
                    "vPan.down('#viewCon').setHidden(false);",
                    "if(splash !== undefined && splash !== null){",
                    "    splash.setHidden(true);",
                    "    vPan.down('#viewCon').setHidden(false);",
                    "}",
                    "",
                    "Ext.data.JsonP.request({",
                    "    url:getDataWriteApi(),",
                    "    params:{",
                    "        bd_idx:bdIdx,",
                    "        html:0",
                    "    },",
                    "    success:function(response){",
                    "        /* field store */",
                    "        var colsList = response.categoryColsList;",
                    "        var approvalList = response.approvalList;",
                    "        /* field store for make grid fields */",
                    "        var fStore = Ext.getStore('fStore_' + caId);",
                    "        if(fStore === undefined){",
                    "            fStore = Ext.create(appName + '.store.FieldStore',{",
                    "                storeId:'fStore_' + caId,",
                    "                data:colsList",
                    "            });",
                    "        }",
                    "        else{",
                    "            fStore.setData(colsList);",
                    "        }",
                    "        /* change to lock(undeditable) mode */",
                    "        var et = vPan.getHeader().el.select('.editableToggle').elements[0];",
                    "        et.setAttribute('src', 'resources/images/ico_lock.png');",
                    "",
                    "        Ext.data.JsonP.request({",
                    "            url:getViewApi(),",
                    "            params:{",
                    "                bd_idx:bdIdx",
                    "            },",
                    "            success:function(response){",
                    "                var dl = response.binderView;",
                    "                dl.companyInfo = companyInfo;",
                    "                if(approvalList && approvalList.length > 0){",
                    "                    dl.approvalList = approvalList;",
                    "                }",
                    "                else{",
                    "                    dl.approvalList = null;",
                    "                }",
                    "                var hasFile = false;",
                    "                Ext.Object.each(dl, function(key, value){",
                    "                    if(key == 'bd_file'){",
                    "                        if(value.length !== 0){",
                    "                            hasFile = true;",
                    "                        }",
                    "                    }",
                    "                });",
                    "                /* add an attached file exists or not */",
                    "                dl.hasFile = hasFile;",
                    "                viewer.categoryId = caId;",
                    "                viewer.info = dl;",
                    "",
                    "                if(!config.option.formMode) config.option.formMode = 'Default';",
                    "                var combo = vPan.getHeader().down('combo');",
                    "                combo.setValue(config.option.formMode);",
                    "                var record = combo.findRecord('formId', combo.getValue());",
                    "                html = app.doc.Viewer.FORMS[record.get('index')].getHtml(viewer.info);",
                    "                viewer.setHtml(html);",
                    "                vCon.add(viewer);",
                    "                grid.enable();",
                    "",
                    "            }",
                    "        });",
                    "",
                    "",
                    "    }",
                    "});",
                    "",
                    "/* set Comment list */",
                    "me.setCommentList(bdIdx);",
                    ""
                ]
            },
            "name": "viewDocument",
            "designerId": "d514332e-01d1-41aa-bc06-4aeae5f319fc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "src"
                ],
                "fn": "viewImage",
                "implHandler": [
                    "window.location.href = src;"
                ]
            },
            "name": "viewImage",
            "designerId": "3bc6be72-1d44-47e1-9f5c-4a98b79539c8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "categoryInfo"
                ],
                "fn": "setMenuPermission",
                "implHandler": [
                    "var header = this.getMainView().down('#headerPan');",
                    "var btNew = header.down('#btnNew');",
                    "var btEdit = header.down('#btnEdit');",
                    "var btDel = header.down('#btnDel');",
                    "var btPrint = header.down('#btnPrint');",
                    "var btComment = header.down('#btnComment');",
                    "// var setCmt = (userInfo.nv_level < categoryInfo.ca_comment)? btComment.disable() : btComment.enable();",
                    "var setDel = (userInfo.nv_level < categoryInfo.ca_delete)? btDel.disable() : btDel.enable();",
                    "// var setPrt = (userInfo.nv_level < categoryInfo.ca_print)? btPrint.disable() : btPrint.enable();",
                    "var setWit = (userInfo.nv_level < categoryInfo.ca_write)? btEdit.disable() : btEdit.enable();"
                ]
            },
            "name": "setMenuPermission",
            "designerId": "9e8ed2d4-12d1-4887-b368-2ee2108c33d4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "show"
                ],
                "fn": "showSplash",
                "implHandler": [
                    "var splash = this.getViewPan().down('#splash');",
                    "if(show){",
                    "    if(splash !== null && splash !== undefined){",
                    "        var html = '<div style=\"width:100%;text-align:center;\">';",
                    "        html    += '<div style=\"width:100%;margin-top:200px;font-size:40px;font-wieght:bold;color:#222222\">' + categoryName + '</div>';",
                    "        html    += '<div style=\"color:#999999;font-size:12px;margin-top:20px\">' + locale.main.pluginIntro + '</div>';",
                    "        html    += '</div>';",
                    "        splash.setHtml(html);",
                    "    }  ",
                    "    splash.setHidden(false);",
                    "}",
                    "else{",
                    "    splash.setHidden(true);",
                    "}"
                ]
            },
            "name": "showSplash",
            "designerId": "67e2046e-4dba-4924-b35e-21fb99689960"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainView",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "MainView",
                "fn": "onMainViewBeforeRender",
                "implHandler": [
                    "var hdrPan = component.down('#headerPan');",
                    "var vewPan = component.down('#viewPan');",
                    "var loginWin = this.getLoginWindow();",
                    "hdrPan.hide();",
                    "vewPan.hide();",
                    "",
                    "loginWin.on('afterrender', function(){",
                    "    loginWin.el.dom.onkeyup = function(e){",
                    "        if(e.keyCode == 13){",
                    "            var fdUserId =  loginWin.down('#userId');",
                    "            var fdPass =  loginWin.down('#password');",
                    "            if(fdUserId.getValue() !== '' && fdPass.getValue() !== ''){",
                    "                var loginBtn = loginWin.down('#loginButton');",
                    "                loginBtn.fireEvent('click');",
                    "            }",
                    "        }",
                    "    };",
                    "});",
                    "",
                    "//Apply menu languageset by binding",
                    "if(localStorage.getItem('baseLanguage')){",
                    "    var baseLan = localStorage.getItem('baseLanguage');",
                    "    if(baseLan == 'korean'){",
                    "        loginWin.down('#rdKorean').setValue(true);",
                    "    }",
                    "    else{",
                    "        loginWin.down('#rdEnglish').setValue(true);",
                    "    }",
                    "}",
                    "var baseData = {",
                    "    addAttachFile:locale.upload.addAttachFile,",
                    "    addRow:locale.upload.addRow,",
                    "    attachedFile:locale.upload.attachedFile,",
                    "    attachFile:locale.main.attachFile,",
                    "    cancel:locale.upload.cancel,",
                    "    category:locale.main.category,",
                    "    changeShortcut:locale.config.changeShortcut,",
                    "    commentList:locale.main.commentList,",
                    "    config:locale.main.config,",
                    "    delAllRow:locale.upload.delAllRow,",
                    "    delRow:locale.upload.delRow,",
                    "    description:locale.main.description,",
                    "    detailMode:locale.config.detailMode,",
                    "    dropHere:locale.main.dropHere,",
                    "    edit:locale.menu.edit,",
                    "    editable:locale.menu.editable,",
                    "    entry:locale.upload.entry,",
                    "    gridTitle:locale.main.gridTitle,",
                    "    linkWinTitle:locale.main.linkWindowTitle,",
                    "    listDisplay:locale.config.listDisplay,",
                    "    logoPath:companyInfo.company_logo,",
                    "    login:locale.login.login,",
                    "    newComment:locale.main.newComment,",
                    "    newPost:locale.menu.newPost,",
                    "    ok:locale.main.ok,",
                    "    option1:locale.upload.option1,",
                    "    option2:locale.upload.option2,",
                    "    password:locale.login.password,",
                    "    printIt:locale.main.printIt,",
                    "    referenceCategory:locale.main.referenceCategory,",
                    "    refresh:locale.main.refresh,",
                    "    remove:locale.menu.remove,",
                    "    reset:locale.main.reset,",
                    "    saveClose:locale.main.saveClose,",
                    "    selectForm:locale.config.selectForm,",
                    "    setting:locale.menu.setting,",
                    "    simpleMode:locale.config.simpleMode,",
                    "    submit:locale.upload.submit,",
                    "    title:locale.main.title,",
                    "    update:locale.upload.update,",
                    "    uploadTitle:locale.upload.uploadTitle,",
                    "    userId:locale.login.userId",
                    "};",
                    "component.getViewModel().setData(baseData);"
                ],
                "name": "beforerender",
                "scope": "me"
            },
            "name": "onMainViewBeforeRender",
            "designerId": "02ac4c40-55c7-4a74-9fb3-7b1d0b76dda3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSubmitComment",
                "designer|targetType": "MyButton5",
                "fn": "onBtnSubmitCommentClick",
                "implHandler": [
                    "var cmtUrl = getCommentUpdateApi();",
                    "var vPan = this.getViewPan();",
                    "var viewer = vPan.down('#docViewer');",
                    "var idx = viewer.viewModel.data.bd_idx;",
                    "var value = vPan.down('#commentNew').getValue();",
                    "if(value === ''){",
                    "    Ext.toast(locale.main.noComment);",
                    "    return;",
                    "}",
                    "",
                    "Ext.data.JsonP.request({",
                    "    url:cmtUrl,",
                    "    params:{",
                    "        bd_idx:idx,",
                    "        cmt_content:value",
                    "    },",
                    "    success:function(response){",
                    "        if(response.result){",
                    "            vPan.down('#commentNew').setValue('');",
                    "        }",
                    "        else{",
                    "            alert('Network connection problem');",
                    "        }",
                    "    },",
                    "    failure:function(response){",
                    "        alert('Network connection problem');",
                    "    }",
                    "",
                    "});",
                    "",
                    "this.setCommentList(idx, vPan.down('#commentListCon'));"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnSubmitCommentClick",
            "designerId": "9b538b77-1520-4c78-bd4a-38ef3343a1ba"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnDel",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton2",
                "fn": "onBtnDelClick",
                "implHandler": [
                    "var me = this;",
                    "var grid = this.getWestPanel().getActiveTab();",
                    "var chks = grid.getSelectionModel().getSelection();",
                    "if(chks.length === 0){",
                    "    alert(locale.upload.noneSelected);",
                    "    return;",
                    "}",
                    "var selected = chks[0];",
                    "var h = selected.get('file_height');",
                    "var w = selected.get('file_width');",
                    "var tSize = 100;",
                    "var bSize;",
                    "if(w < tSize && h < tSize){",
                    "    bSize = 'auto';",
                    "}",
                    "else{",
                    "    bSize = 'cover';",
                    "}",
                    "var html = '<table style=\"border:1px solid #cecece;width:100%\"><tr>';",
                    "html    += '<td width=100>';",
                    "html  \t+=    '<div style=\"float:left;width:100px;height:100px;background-image:url(' + selected.get('thumb_path');",
                    "html \t+= ');background-size:'+bSize+'\" class=\"div-image\"></div>';",
                    "html    += '</td>';",
                    "html    += '<td style=\"padding-left:15px\">';",
                    "html    += '<span style=\"font-weight:bold\">제목: </span>' + selected.get('bd_subject') + '<br><span style=\"font-weight:bold\">등록일: </span>' + selected.get('bd_regdate');",
                    "html    += '<br><span style=\"font-weight:bold\">사용자: </span>' + selected.get('bd_name');",
                    "html    += '</td>';",
                    "html    += '</tr></table>';",
                    "Ext.create('Ext.window.Window', {",
                    "    modal:true,",
                    "    layout:{",
                    "        type:'vbox',",
                    "        align: 'stretch'",
                    "    },",
                    "    bodyStyle:'padding:20px',",
                    "    items:[",
                    "        {",
                    "            xtype:'container',",
                    "            height:tSize,",
                    "            width:400,",
                    "            html:html,",
                    "            margin:'0 0 20 0'",
                    "        },",
                    "        {",
                    "            xtype: 'label',",
                    "            text: locale.main.delAlert",
                    "        },",
                    "        {",
                    "            xtype:'container',",
                    "            layout:{",
                    "                type:'hbox',",
                    "                pack:'center'",
                    "            },",
                    "            margin:'10 0 10 0',",
                    "            items:[",
                    "                {",
                    "                    xtype:'button',",
                    "                    text:locale.menu.remove,",
                    "                    width:70,",
                    "                    handler:function(button){",
                    "                        Ext.data.JsonP.request({",
                    "                            url:getDeleteDataApi(),",
                    "                            params:{",
                    "                                bd_idx:selected.get('bd_idx')",
                    "                            },",
                    "                            success:function(response){",
                    "                                if(response.result){",
                    "                                    Ext.getStore('dStore_' + selectedCategory).load();",
                    "                                    button.up('window').close();",
                    "                                    var viewer = me.getViewPan().down('#viewer');",
                    "                                    if(selectedCategory == viewer.categoryId){",
                    "                                        viewer.destroy();",
                    "                                    }",
                    "                                }",
                    "                            }",
                    "                        });",
                    "                    }",
                    "                },",
                    "                {",
                    "                    xtype:'button',",
                    "                    text:locale.upload.cancel,",
                    "                    width:70,",
                    "                    style:'margin-left:6px',",
                    "                    handler:function(button){",
                    "                        button.up('window').close();",
                    "                    }",
                    "                }",
                    "            ]",
                    "        }",
                    "    ]",
                    "}).show();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnDelClick",
            "designerId": "a0aa1fd0-4121-4970-8599-d0b8d378ec7d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnPrint",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton21",
                "fn": "onBtnPrintClick",
                "implHandler": [
                    "this.printDocument();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnPrintClick",
            "designerId": "5c19c967-ddc1-4291-8031-66703090fde3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnConfig",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton1",
                "fn": "onBtnConfigClick",
                "implHandler": [
                    "var me = this;",
                    "if(preference === undefined){ //globals.js 에서 정의",
                    "    preference = Ext.create(appName + '.view.Preference');",
                    "    var rqtList = me.getWestPanel().getActiveTab();",
                    "    var cols = rqtList.categoryColsList;",
                    "    preference.on('close', function(panel){",
                    "        var sMode = panel.down('#simpleMode');",
                    "        var val = sMode.getValue();",
                    "        var mode = rqtList.listMode;",
                    "        if(val){",
                    "            window.localStorage.setItem('isSimpleMode', true);",
                    "            rqtList.listMode = 'simple';",
                    "            if(mode != 'simple'){",
                    "                rqtList.reconfigure(Ext.getStore('dStore_' + selectedCategory), me.getGridColumns(cols));",
                    "            }",
                    "        }",
                    "        else{",
                    "            window.localStorage.setItem('isSimpleMode', false);",
                    "            rqtList.listMode = 'detail';",
                    "            if(mode != 'detail'){",
                    "                rqtList.reconfigure(Ext.getStore('dStore_' + selectedCategory), me.getGridColumns(cols));",
                    "            }",
                    "        }",
                    "    });",
                    "",
                    "    preference.on('show', function(component){",
                    "        var val = window.localStorage.getItem('isSimpleMode');",
                    "        if(val === 'true'){",
                    "            component.down('#simpleMode').setValue(true);",
                    "        }",
                    "        else{",
                    "            component.down('#detailMode').setValue(true);",
                    "        }",
                    "    });",
                    "}",
                    "preference.show();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtnConfigClick",
            "designerId": "e7590f33-e6f1-479c-b822-c2517aabb1c1"
        }
    ]
}